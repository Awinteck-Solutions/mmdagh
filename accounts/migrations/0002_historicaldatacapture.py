# Generated by Django 5.1.6 on 2025-04-13 21:59

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalDataCapture',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('serial_number', models.CharField(db_index=True, editable=False, max_length=20)),
                ('category', models.CharField(default='INDV', editable=False, max_length=10)),
                ('date_created', models.DateTimeField(blank=True, editable=False)),
                ('date_updated', models.DateTimeField(blank=True, editable=False)),
                ('ghana_card', models.CharField(db_index=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Ghana Card should follow the format: GHA-XXXXXXXXXX-X where X is optional.', regex='^GHA-\\d{10}-\\d*$')])),
                ('first_name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('contact_1', models.CharField(max_length=20)),
                ('contact_2', models.CharField(blank=True, max_length=10, null=True)),
                ('home_town', models.CharField(max_length=50)),
                ('home_region', models.CharField(choices=[('Greater Accra', 'Greater Accra'), ('Ashanti', 'Ashanti'), ('Western', 'Western'), ('Central', 'Central'), ('Eastern', 'Eastern'), ('Northern', 'Northern'), ('Upper East', 'Upper East'), ('Upper West', 'Upper West'), ('Volta', 'Volta'), ('Oti', 'Oti'), ('Western North', 'Western North'), ('Bono', 'Bono'), ('Bono East', 'Bono East'), ('Ahafo', 'Ahafo'), ('Savannah', 'Savannah'), ('North East', 'North East')], max_length=50)),
                ('language', models.CharField(choices=[('English', 'English'), ('Twi', 'Twi'), ('Hausa', 'Hausa'), ('Ga', 'Ga'), ('Kusaal', 'Kusaal'), ('Dagomba', 'Dagomba'), ('French', 'French'), ('Fante', 'Fante'), ('Ewe', 'Ewe')], max_length=50)),
                ('spouse_name', models.CharField(max_length=100)),
                ('spouse_contact', models.CharField(max_length=10)),
                ('neighbor_emergency_name', models.CharField(max_length=100)),
                ('neighbor_emergency_contact', models.CharField(max_length=10)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Traditional', 'Traditional'), ('N/A', 'N/A')], max_length=50)),
                ('email', models.CharField(max_length=30)),
                ('rooms', models.IntegerField(default=1)),
                ('occupation', models.CharField(max_length=50)),
                ('name_of_place_of_work', models.CharField(max_length=50)),
                ('location_of_place_work', models.CharField(max_length=50)),
                ('work_place_contact', models.CharField(max_length=10)),
                ('nature_ownership', models.CharField(choices=[('Govt', 'Govt'), ('Private', 'Private'), ('Govt/Private', 'Govt/Private'), ('Religious', 'Religious')], max_length=100)),
                ('house_number', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('street_name', models.CharField(max_length=100)),
                ('area_name', models.CharField(max_length=100)),
                ('area_zone', models.CharField(choices=[('Zone_A', 'Zone A'), ('Zone_B', 'Zone B'), ('Zone_C', 'Zone C'), ('Zone_D', 'Zone D'), ('Urban', 'Urban'), ('Rural', 'Rural')], max_length=100)),
                ('gps_address', models.CharField(max_length=100)),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('electricity', models.BooleanField(default=False)),
                ('gwcpl_supply', models.BooleanField(default=False)),
                ('nearest_landmark', models.CharField(max_length=100)),
                ('criminal_activities_1', models.CharField(choices=[('Stealing', 'Stealing'), ('Assault', 'Assault'), ('Fraud', 'Fraud'), ('Theft', 'Theft'), ('Rape & Defilement', 'Rape & Defilement'), ('Robbery', 'Robbery')], max_length=50)),
                ('criminal_activities_2', models.CharField(choices=[('Stealing', 'Stealing'), ('Assault', 'Assault'), ('Fraud', 'Fraud'), ('Theft', 'Theft'), ('Rape & Defilement', 'Rape & Defilement'), ('Robbery', 'Robbery')], max_length=50)),
                ('criminal_activities_3', models.CharField(choices=[('Stealing', 'Stealing'), ('Assault', 'Assault'), ('Fraud', 'Fraud'), ('Theft', 'Theft'), ('Rape & Defilement', 'Rape & Defilement'), ('Robbery', 'Robbery')], max_length=50)),
                ('network_connectivity', models.CharField(choices=[('Strong', 'Strong'), ('Average', 'Average'), ('Weak', 'Weak'), ('No Network', 'No Network')], max_length=20)),
                ('road_network', models.CharField(choices=[('Tired', 'Tired'), ('Non-Tired', 'Non-Tired'), ('No Road', 'No Road')], max_length=20)),
                ('profile_picture', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mmda', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.mmda')),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.region')),
            ],
            options={
                'verbose_name': 'historical Data Capture',
                'verbose_name_plural': 'historical Data Captures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
